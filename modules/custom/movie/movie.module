<?php
use Drupal\Core\Url;
use Drupal\node\Entity\Node;
use Drupal\node\NodeInterface;



function movie_block_type_form_alter(&$form, \Drupal\Core\Form\FormStateInterface $form_state, $form_id) {
  // Check if it's the form for a specific custom block type, e.g., 'basic'.
  if ($form_id === 'block_content_trending_edit_form') {
   
 $form['my_custom_field'] = [
      '#type' => 'textfield',
      '#title' => t('My Custom Field for Basic Block'),
      '#weight' => 10,
      '#prefix' => '<div class="article-title-wrapper"><a href="/asd">Update</a>',
      '#suffix' => '</div>',
    ];
  }
}
/**
 * Implements hook_node_presave().
 */
function movie_node_presave(NodeInterface $node) {
  // Example: Set a default value for a custom field if it's empty.
  if ($node->get('field_embed')->value) {
// print $node->field_embed->value;
 $queryString = parse_url($node->field_embed->value, PHP_URL_QUERY);
    
    $params = [];
    parse_str($queryString, $params);
   //print "<br>".$params['url'];
//exit;
if(@$params['enco']){
   
$string = $node->field_embed->value;
$search = array($params['url'], $params['s'],$params['enco']);
$replace = array(base64_encode($params['url']), base64_encode($params['s']),'');
$newString = str_replace($search, $replace, $string);
    $node->set('field_embed', $newString);
}
  }


}

function movie_preprocess_node(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  
  
  $node3 = \Drupal::routeMatch()->getParameter('node');
 if ($node->getType() == 'movie' && $view_mode=='full' && $node3 instanceof \Drupal\node\NodeInterface) {
  // Get the node ID.
$context ='';
  $nid = $variables['node']->id();

   $node2 = \Drupal\movie\ReplaceLanguageCode::replaceLangcode($nid,$context);

 $variables['#cache']['max-age'] = 0;
print "load";
exit;
 
}
}

/**
 * Implements hook_views_data().
 */
function movie_views_data() {
  $data = [];

  $data['views']['year_filter'] = [
    'title' => t('Year filter - Custom Filter'),
    'filter' => [
      'title' => t('Year filter - Custom Filter'),
      'field' => 'created',
      'id' => 'year_filter',
    ],
  ];

  return $data;
}

function movie_views_pre_render(Drupal\views\ViewExecutable $view) {
  // Example: Remove results from a specific view and display
  
  // print exit;
  
}

function movie_views_query_alter(Drupal\views\ViewExecutable $view, \Drupal\views\Plugin\views\query\QueryPluginBase $query) { 


 if ($view->id() == "api_search") {
 $exposed_input = $view->exposed_raw_input;

    // Check if a specific exposed filter value exists.

 if (($view->current_display == 'page_2') && (isset($exposed_input['query']) || isset($exposed_input['title_2']))) {
      $filter_value = ($exposed_input['query'])?$exposed_input['query']:$exposed_input['title_2'];
$filter_value = preg_replace("/[^A-Za-z0-9 ]/", '', $filter_value); 

if (isset($view->exposed_raw_input['query']) || isset($view->exposed_raw_input['title_2'])) {
     foreach ($query->where as $group_id => $group) {
      foreach ($group['conditions'] as $key => $condition) {
        if (isset($condition['field']) && $condition['field'] === 'node_field_data.title') {
          unset($query->where[$group_id]['conditions'][$key]);
        }
      }
    }
    }

  
$query->addWhereExpression(
          2,
          "MATCH(node_field_data.title) AGAINST (:search IN BOOLEAN MODE)",
          [':search' => $filter_value.'*']
        );
  
  $case_expression = "MATCH(node_field_data.title) AGAINST ('$filter_value*' IN BOOLEAN MODE)";
   
    
    $query->addOrderBy(NULL, $case_expression, 'DESC', 'relevance');



}

    if ($view->current_display == 'page_1' || $view->current_display == 'rest_export_1' && (isset($exposed_input['query']) || isset($exposed_input['title_2']))) {
      $filter_value = ($exposed_input['query'])?$exposed_input['query']:$exposed_input['title_2'];
      $filter_value = trim($filter_value);
 $query->addWhere(2, "node_field_data.title", "$filter_value%", "like");
 $query->addWhere(2, "node_field_data.title", "%$filter_value%", "like");
 $query->addWhere(2, "node_field_data.title", "$filter_value", "SOUNDS like");
$filter_value = str_replace("'", "\'", $filter_value);
  $case_expression = "CASE 
      WHEN node_field_data.title LIKE '$filter_value' THEN 1
      WHEN node_field_data.title LIKE '$filter_value%' THEN 2
      WHEN node_field_data.title LIKE '%$filter_value%' THEN 3
      WHEN node_field_data.title SOUNDS LIKE '$filter_value' THEN 4
      ELSE 5
    END";
    
    $query->addOrderBy(NULL, $case_expression, 'ASC', 'priority_sort');
  



}
   
  }

 
 if ($view->id() == "api"){
  $page = \Drupal::request()->get('page');
if($page > 20){
 throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException();
 }
 
}

 if ($view->id() == "detail_movie"){
 //exit;
 $link_array = explode('/',$_SERVER["REQUEST_URI"]);
     $nid = end($link_array);
   $context ='';
  if(intval($nid)){
   $node2 = \Drupal\movie\ReplaceLanguageCode::replaceLangcode($nid,$context);
  }
 
}



}

