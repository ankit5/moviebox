<?php
use Drupal\Core\Url;
use Drupal\node\Entity\Node;

function movie_preprocess_node(&$variables) {
  $node = $variables['node'];
  $view_mode = $variables['view_mode'];
  
  
  $node3 = \Drupal::routeMatch()->getParameter('node');
 if ($node->getType() == 'movie' && $view_mode=='full' && $node3 instanceof \Drupal\node\NodeInterface) {
  // Get the node ID.
  
$context ='';
  $nid = $variables['node']->id();
 
   $node2 = \Drupal\movie\ReplaceLanguageCode::replaceLangcode($nid,$context);

 $variables['#cache']['max-age'] = 0;
 
}
}

/**
 * Implements hook_views_data().
 */
function movie_views_data() {
  $data = [];

  $data['views']['year_filter'] = [
    'title' => t('Year filter - Custom Filter'),
    'filter' => [
      'title' => t('Year filter - Custom Filter'),
      'field' => 'created',
      'id' => 'year_filter',
    ],
  ];

  return $data;
}

function movie_views_pre_render(Drupal\views\ViewExecutable $view) {
  // Example: Remove results from a specific view and display
  
  // print exit;
  
}

function movie_views_query_alter(Drupal\views\ViewExecutable $view, Drupal\views\Plugin\views\query\Sql  $query) { 


 if ($view->id() == "api_search" && $view->current_display == 'page_1') {
 $exposed_input = $view->exposed_raw_input;

    // Check if a specific exposed filter value exists.
    if (isset($exposed_input['query'])) {
      $filter_value = $exposed_input['query'];
$query->orderby = [];
 $query->addWhere(2, "node_field_data.title", $filter_value, "SOUNDS like");
$query->orderby[] = [
      'field' => "CASE
                    WHEN node_field_data.title LIKE '$filter_value%' THEN 1
    ELSE 2
END"
    ];
}
   
  }

 
 if ($view->id() == "api"){
  $page = \Drupal::request()->get('page');
if($page > 20){
 throw new \Symfony\Component\HttpKernel\Exception\NotFoundHttpException();
 }
 
}

 if ($view->id() == "detail_movie"){
 //exit;
 $link_array = explode('/',$_SERVER["REQUEST_URI"]);
     $nid = end($link_array);
   $context ='';
  if(intval($nid)){
   $node2 = \Drupal\movie\ReplaceLanguageCode::replaceLangcode($nid,$context);
  }
 
}



}

